/**
 * (1)
Используйте функции alert, confirm, prompt для общения с пользователем.
Написать игровой бот.
"Загадывание случайного числа от 1 до 100"
Что должна делать программа:
— спрашивает пользователя: "Угадай число от 1 до 100".
— если пользовательское число больше, то бот выводит "Загаданное число меньше" и предлагает ввести новый вариант;
— если пользовательское число меньше, то бот выводит "Загаданное число больше" и предлагает ввести новый вариант;
— если пользователь ввел не число, то выводит сообщение "Введи число!" и предлагает ввести новый вариант;
— если пользователь нажимает "Отмена", то игра заканчивается и выводится сообщение "Игра окончена".
—  если пользовательское число равно загаданному, 
то игра заканчивается и выводит сообщение  "Поздравляю, Вы угадали!!!".
Программа должны быть выполнена с помощью рекурсии, без единого цикла.
Загаданное число должно храниться «в замыкании»
 * (2)
Дописать функционал игрового бота.
Кол-во попыток пользователя должно быть ограничено: 10
— если пользовательское число больше, то бот выводит "Загаданное число меньше, 
осталось попыток ..." и предлагает ввести новый вариант;
— если пользовательское число меньше, то бот выводит "Загаданное число больше, 
осталось попыток ..." и предлагает ввести новый вариант;
— если пользователь вводит правильное число, то бот выводит 
"Поздравляю, Вы угадали!!! Хотели бы сыграть еще?", 
при нажатии ОК игра перезапускается (снова 10 попыток и новое загаданное число)
— если пользователь ввел не число, то выводит сообщение "Введи число!" и предлагает ввести новый вариант;
— если пользователь нажимает "Отмена", то игра выводит прощальное сообщение и завершается.
— если закончились попытки то программа сообщает: "Попытки закончились, хотите сыграть еще?"
Программа должны быть выполнена с помощью рекурсии, без единого цикла.
Загаданное число и оставшиеся кол-во попыток должно храниться «в замыкании»
 */
"use strict";

//Проверка на <number>
const isNumber = (el) => {
  return !isNaN(parseFloat(el)) && isFinite(el);
};

function getRandomNumber() {
  const num = Math.floor(Math.random() * 100 + 1);
  const askPlayer = function () {
    let playerGuess = prompt("Угадай число от 1 до 100");
    //Условия выхода из рекурсии
    if (playerGuess === 0 || playerGuess === null) {
      if (confirm("Уже все?")) {
        return alert("Игра окончена");
      }
    } else if (+playerGuess === num) {
      return alert(`${playerGuess}? Поздравляю, Вы угадали!!!`);
    }
    //Условия запуска рекурсии
    if (!isNumber(playerGuess) || playerGuess > 100 || playerGuess < 1) {
      alert("Введи число! [от 1 до 100]");
      askPlayer(num);
    }
    if (playerGuess > 0 || playerGuess < 100) {
      if (
        num > playerGuess &&
        playerGuess > 0 &&
        playerGuess !== 0 &&
        playerGuess !== null
      ) {
        alert(`Загаданное число больше чем ${playerGuess}`);
        askPlayer(num);
      } else if (
        num < playerGuess &&
        playerGuess < 100 &&
        playerGuess !== 0 &&
        playerGuess !== null
      ) {
        alert(`Загаданное число меньше чем ${playerGuess}`);
        askPlayer(num);
      }
    }
  };
  return askPlayer;
}

//start
const startGame = getRandomNumber();
startGame();
console.dir(startGame); //closure check
